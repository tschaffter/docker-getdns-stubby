name: CI

on:
  schedule:
    - cron: '0 10 * * 0'  # every Sunday at 10am
  push:
    branches:
      - main
    tags:
      - '*.*.*'
  pull_request:

env:
  docker_repository: tschaffter/getdns-stubby

jobs:
  configure:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Create configuration
      run: |
        DOCKER_IMAGE=${{ env.docker_repository }}
        VERSION=noop
        PUSH=false
        if [ "${{ github.event_name }}" = "schedule" ]; then
          VERSION=weekly
          PUSH=true
        elif [[ $GITHUB_REF == refs/tags/* ]]; then
          # VERSION=${GITHUB_REF#refs/tags/}  # use getdns version instead
          VERSION=$(cat .getdns-version)
        elif [[ $GITHUB_REF == refs/heads/* ]]; then
          VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          if [ "${{ github.event.repository.default_branch }}" = "$VERSION" ]; then
            VERSION=edge
            PUSH=true
          fi
        fi
        TAGS="${DOCKER_IMAGE}:${VERSION}"
        if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
          MAJOR=${VERSION%.*}
          TAGS="$TAGS,${DOCKER_IMAGE}:latest"
          TAGS="$TAGS,${DOCKER_IMAGE}:${VERSION}-${GITHUB_SHA::8}"
          PUSH=true
        elif [ "$VERSION" = "edge" ]; then
          TAGS="$TAGS,${DOCKER_IMAGE}:edge-${GITHUB_SHA::8}"
          PUSH=true
        fi
        printf "%s\n" \
          "version=${VERSION}" \
          "tags=${TAGS}" \
          "created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" \
          "push=${PUSH}" | tee -a .github_env

    - name: Upload .github_env
      uses: actions/upload-artifact@v2
      with:
        name: GITHUB_ENV
        path: .github_env

  lint:
    needs: [configure]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Lint Dockerfiles
      uses: docker://hadolint/hadolint:latest
      with:
        entrypoint: hadolint
        args: Dockerfile

    - name: Validate docker-compose.yml
      run: |
        docker-compose -f docker-compose.yml config >/dev/null

  docker:
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Download .github_env
      uses: actions/download-artifact@v2
      with:
        name: GITHUB_ENV
        path: .

    - name: Restore $GITHUB_ENV
      run: cat .github_env >> $GITHUB_ENV

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      if: env.push == 'true'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        file: Dockerfile
        platforms: linux/amd64,linux/arm/v7,linux/arm64
        push: ${{ env.push }}
        tags: ${{ env.tags }}
        labels: |
          org.opencontainers.image.created=${{ env.created }}
          org.opencontainers.image.source=${{ github.repositoryUrl }}
          org.opencontainers.image.version=${{ env.version }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.licenses=${{ github.event.repository.license.name }}
